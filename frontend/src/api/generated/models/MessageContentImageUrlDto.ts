//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageUrlDto } from './ImageUrlDto';
import {
    ImageUrlDtoFromJSON,
    ImageUrlDtoFromJSONTyped,
    ImageUrlDtoToJSON,
} from './ImageUrlDto';

/**
 * 
 * @export
 * @interface MessageContentImageUrlDto
 */
export interface MessageContentImageUrlDto {
    /**
     * The content as image.
     * @type {ImageUrlDto}
     * @memberof MessageContentImageUrlDto
     */
    image: ImageUrlDto;
    /**
     * 
     * @type {string}
     * @memberof MessageContentImageUrlDto
     */
    type: MessageContentImageUrlDtoTypeEnum;
}


/**
 * @export
 */
export const MessageContentImageUrlDtoTypeEnum = {
    ImageUrl: 'image_url'
} as const;
export type MessageContentImageUrlDtoTypeEnum = typeof MessageContentImageUrlDtoTypeEnum[keyof typeof MessageContentImageUrlDtoTypeEnum];


/**
 * Check if a given object implements the MessageContentImageUrlDto interface.
 */
export function instanceOfMessageContentImageUrlDto(value: object): value is MessageContentImageUrlDto {
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function MessageContentImageUrlDtoFromJSON(json: any): MessageContentImageUrlDto {
    return MessageContentImageUrlDtoFromJSONTyped(json, false);
}

export function MessageContentImageUrlDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageContentImageUrlDto {
    if (json == null) {
        return json;
    }
    return {
        
        'image': ImageUrlDtoFromJSON(json['image']),
        'type': json['type'],
    };
}

export function MessageContentImageUrlDtoToJSON(value?: MessageContentImageUrlDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'image': ImageUrlDtoToJSON(value['image']),
        'type': value['type'],
    };
}

