//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StreamUIRequestDto } from './StreamUIRequestDto';
import {
    StreamUIRequestDtoFromJSON,
    StreamUIRequestDtoFromJSONTyped,
    StreamUIRequestDtoToJSON,
} from './StreamUIRequestDto';

/**
 * 
 * @export
 * @interface StreamUIEventDto
 */
export interface StreamUIEventDto {
    /**
     * The request.
     * @type {StreamUIRequestDto}
     * @memberof StreamUIEventDto
     */
    request: StreamUIRequestDto;
    /**
     * 
     * @type {string}
     * @memberof StreamUIEventDto
     */
    type: StreamUIEventDtoTypeEnum;
}


/**
 * @export
 */
export const StreamUIEventDtoTypeEnum = {
    Ui: 'ui'
} as const;
export type StreamUIEventDtoTypeEnum = typeof StreamUIEventDtoTypeEnum[keyof typeof StreamUIEventDtoTypeEnum];


/**
 * Check if a given object implements the StreamUIEventDto interface.
 */
export function instanceOfStreamUIEventDto(value: object): value is StreamUIEventDto {
    if (!('request' in value) || value['request'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function StreamUIEventDtoFromJSON(json: any): StreamUIEventDto {
    return StreamUIEventDtoFromJSONTyped(json, false);
}

export function StreamUIEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamUIEventDto {
    if (json == null) {
        return json;
    }
    return {
        
        'request': StreamUIRequestDtoFromJSON(json['request']),
        'type': json['type'],
    };
}

export function StreamUIEventDtoToJSON(value?: StreamUIEventDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'request': StreamUIRequestDtoToJSON(value['request']),
        'type': value['type'],
    };
}

