//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserGroupDto
 */
export interface UserGroupDto {
    /**
     * The ID of the user group.
     * @type {string}
     * @memberof UserGroupDto
     */
    id: string;
    /**
     * The display name.
     * @type {string}
     * @memberof UserGroupDto
     */
    name: string;
    /**
     * Indicates if the users are admins.
     * @type {boolean}
     * @memberof UserGroupDto
     */
    isAdmin: boolean;
    /**
     * Indicates if the user group is builtin and cannot be deleted.
     * @type {boolean}
     * @memberof UserGroupDto
     */
    isBuiltIn: boolean;
    /**
     * The monthly allowed tokens for all users in the group.
     * @type {number}
     * @memberof UserGroupDto
     */
    monthlyTokens?: number;
    /**
     * The monthly allowed tokens per user in the group.
     * @type {number}
     * @memberof UserGroupDto
     */
    monthlyUserTokens?: number;
}

/**
 * Check if a given object implements the UserGroupDto interface.
 */
export function instanceOfUserGroupDto(value: object): value is UserGroupDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('isAdmin' in value) || value['isAdmin'] === undefined) return false;
    if (!('isBuiltIn' in value) || value['isBuiltIn'] === undefined) return false;
    return true;
}

export function UserGroupDtoFromJSON(json: any): UserGroupDto {
    return UserGroupDtoFromJSONTyped(json, false);
}

export function UserGroupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserGroupDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'isAdmin': json['isAdmin'],
        'isBuiltIn': json['isBuiltIn'],
        'monthlyTokens': json['monthlyTokens'] == null ? undefined : json['monthlyTokens'],
        'monthlyUserTokens': json['monthlyUserTokens'] == null ? undefined : json['monthlyUserTokens'],
    };
}

export function UserGroupDtoToJSON(value?: UserGroupDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'isAdmin': value['isAdmin'],
        'isBuiltIn': value['isBuiltIn'],
        'monthlyTokens': value['monthlyTokens'],
        'monthlyUserTokens': value['monthlyUserTokens'],
    };
}

