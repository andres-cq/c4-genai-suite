//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateConversationDto
 */
export interface CreateConversationDto {
    /**
     * The name of the conversation.
     * @type {string}
     * @memberof CreateConversationDto
     */
    name?: string;
    /**
     * The ID of the configuration.
     * @type {number}
     * @memberof CreateConversationDto
     */
    configurationId?: number;
    /**
     * The context values.
     * @type {object}
     * @memberof CreateConversationDto
     */
    context?: object;
    /**
     * The user argument values.
     * @type {object}
     * @memberof CreateConversationDto
     */
    extensionUserArguments?: object;
}

/**
 * Check if a given object implements the CreateConversationDto interface.
 */
export function instanceOfCreateConversationDto(value: object): value is CreateConversationDto {
    return true;
}

export function CreateConversationDtoFromJSON(json: any): CreateConversationDto {
    return CreateConversationDtoFromJSONTyped(json, false);
}

export function CreateConversationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateConversationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'configurationId': json['configurationId'] == null ? undefined : json['configurationId'],
        'context': json['context'] == null ? undefined : json['context'],
        'extensionUserArguments': json['extensionUserArguments'] == null ? undefined : json['extensionUserArguments'],
    };
}

export function CreateConversationDtoToJSON(value?: CreateConversationDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'configurationId': value['configurationId'],
        'context': value['context'],
        'extensionUserArguments': value['extensionUserArguments'],
    };
}

