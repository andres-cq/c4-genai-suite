//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExtensionArgumentObjectSpecDto } from './ExtensionArgumentObjectSpecDto';
import {
    ExtensionArgumentObjectSpecDtoFromJSON,
    ExtensionArgumentObjectSpecDtoFromJSONTyped,
    ExtensionArgumentObjectSpecDtoToJSON,
} from './ExtensionArgumentObjectSpecDto';

/**
 * 
 * @export
 * @interface UpdateExtensionDto
 */
export interface UpdateExtensionDto {
    /**
     * The values.
     * @type {{ [key: string]: any; }}
     * @memberof UpdateExtensionDto
     */
    values: { [key: string]: any; };
    /**
     * The arguments.
     * @type {ExtensionArgumentObjectSpecDto}
     * @memberof UpdateExtensionDto
     */
    configurableArguments?: ExtensionArgumentObjectSpecDto;
    /**
     * Indicates whether the extension is enabled.
     * @type {boolean}
     * @memberof UpdateExtensionDto
     */
    enabled?: boolean;
}

/**
 * Check if a given object implements the UpdateExtensionDto interface.
 */
export function instanceOfUpdateExtensionDto(value: object): value is UpdateExtensionDto {
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function UpdateExtensionDtoFromJSON(json: any): UpdateExtensionDto {
    return UpdateExtensionDtoFromJSONTyped(json, false);
}

export function UpdateExtensionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateExtensionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'values': json['values'],
        'configurableArguments': json['configurableArguments'] == null ? undefined : ExtensionArgumentObjectSpecDtoFromJSON(json['configurableArguments']),
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
    };
}

export function UpdateExtensionDtoToJSON(value?: UpdateExtensionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'values': value['values'],
        'configurableArguments': ExtensionArgumentObjectSpecDtoToJSON(value['configurableArguments']),
        'enabled': value['enabled'],
    };
}

