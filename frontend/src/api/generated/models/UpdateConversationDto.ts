//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * c4 GenAI Suite
 * c4 GenAI Suite
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateConversationDto
 */
export interface UpdateConversationDto {
    /**
     * The ID of the configuration.
     * @type {number}
     * @memberof UpdateConversationDto
     */
    configurationId?: number;
    /**
     * The name of the conversation.
     * @type {string}
     * @memberof UpdateConversationDto
     */
    name?: string;
    /**
     * Indicates whether the name of the conversation has been set manually by the user.
     * @type {boolean}
     * @memberof UpdateConversationDto
     */
    isNameSetManually?: boolean;
    /**
     * The context values.
     * @type {object}
     * @memberof UpdateConversationDto
     */
    context?: object;
    /**
     * The argument values.
     * @type {object}
     * @memberof UpdateConversationDto
     */
    extensionUserArguments?: object;
    /**
     * The optional rating for the whole conversation.
     * @type {string}
     * @memberof UpdateConversationDto
     */
    rating?: UpdateConversationDtoRatingEnum;
}


/**
 * @export
 */
export const UpdateConversationDtoRatingEnum = {
    Good: 'good',
    Bad: 'bad',
    Unrated: 'unrated'
} as const;
export type UpdateConversationDtoRatingEnum = typeof UpdateConversationDtoRatingEnum[keyof typeof UpdateConversationDtoRatingEnum];


/**
 * Check if a given object implements the UpdateConversationDto interface.
 */
export function instanceOfUpdateConversationDto(value: object): value is UpdateConversationDto {
    return true;
}

export function UpdateConversationDtoFromJSON(json: any): UpdateConversationDto {
    return UpdateConversationDtoFromJSONTyped(json, false);
}

export function UpdateConversationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateConversationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'configurationId': json['configurationId'] == null ? undefined : json['configurationId'],
        'name': json['name'] == null ? undefined : json['name'],
        'isNameSetManually': json['isNameSetManually'] == null ? undefined : json['isNameSetManually'],
        'context': json['context'] == null ? undefined : json['context'],
        'extensionUserArguments': json['extensionUserArguments'] == null ? undefined : json['extensionUserArguments'],
        'rating': json['rating'] == null ? undefined : json['rating'],
    };
}

export function UpdateConversationDtoToJSON(value?: UpdateConversationDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'configurationId': value['configurationId'],
        'name': value['name'],
        'isNameSetManually': value['isNameSetManually'],
        'context': value['context'],
        'extensionUserArguments': value['extensionUserArguments'],
        'rating': value['rating'],
    };
}

