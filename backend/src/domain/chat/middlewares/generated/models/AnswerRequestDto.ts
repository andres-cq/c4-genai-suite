/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageDto } from './MessageDto';
import {
    MessageDtoFromJSON,
    MessageDtoFromJSONTyped,
    MessageDtoToJSON,
} from './MessageDto';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './UserDto';

/**
 * 
 * @export
 * @interface AnswerRequestDto
 */
export interface AnswerRequestDto {
    /**
     * The history of messages.
     * @type {Array<MessageDto>}
     * @memberof AnswerRequestDto
     */
    history: Array<MessageDto>;
    /**
     * The user prompt.
     * @type {string}
     * @memberof AnswerRequestDto
     */
    prompt: string;
    /**
     * The context values.
     * @type {object}
     * @memberof AnswerRequestDto
     */
    context: object;
    /**
     * The user.
     * @type {UserDto}
     * @memberof AnswerRequestDto
     */
    user: UserDto;
}

/**
 * Check if a given object implements the AnswerRequestDto interface.
 */
export function instanceOfAnswerRequestDto(value: object): value is AnswerRequestDto {
    if (!('history' in value) || value['history'] === undefined) return false;
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    if (!('context' in value) || value['context'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function AnswerRequestDtoFromJSON(json: any): AnswerRequestDto {
    return AnswerRequestDtoFromJSONTyped(json, false);
}

export function AnswerRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnswerRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'history': ((json['history'] as Array<any>).map(MessageDtoFromJSON)),
        'prompt': json['prompt'],
        'context': json['context'],
        'user': UserDtoFromJSON(json['user']),
    };
}

export function AnswerRequestDtoToJSON(value?: AnswerRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'history': ((value['history'] as Array<any>).map(MessageDtoToJSON)),
        'prompt': value['prompt'],
        'context': value['context'],
        'user': UserDtoToJSON(value['user']),
    };
}

