{
  "openapi": "3.0.0",
  "paths": {
    "/tools": {
      "get": {
        "operationId": "getTools",
        "summary": "",
        "description": "Gets the available tools.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ToolsDto" } } }
          }
        },
        "tags": ["tools"]
      },
      "post": {
        "operationId": "executeTool",
        "summary": "",
        "description": "Execute a tool.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExecuteRequestDto" } } }
        },
        "responses": {
          "200": {
            "description": "",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ExecuteResponseDto" } } }
          }
        },
        "tags": ["tools"]
      }
    }
  },
  "info": { "title": "CCCC", "description": "CodeCentric Company Chat", "version": "1.0", "contact": {} },
  "tags": [{ "name": "tools", "description": "" }],
  "servers": [],
  "components": {
    "schemas": {
      "ToolArgumentDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "description": "The type of the argument.", "enum": ["boolean", "number", "string"] },
          "required": { "type": "boolean", "description": "True, if required." },
          "description": { "type": "string", "description": "The description of the argument." },
          "allowedValues": { "description": "The enum values.", "type": "array", "items": { "type": "string" } }
        },
        "required": ["type"]
      },
      "UIRequirementDto": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "description": "The type of UI requirement.", "enum": ["confirm", "input"] },
          "label": { "type": "string", "description": "The label to show to the user." },
          "cacheDuration": { "type": "number", "description": "The cache duration for input requests." }
        },
        "required": ["type", "label", "cacheDuration"]
      },
      "ToolDto": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "The name of the tool." },
          "description": { "type": "string", "description": "The description of the tool." },
          "ui": { "description": "The requirements on the UI.", "allOf": [{ "$ref": "#/components/schemas/UIRequirementDto" }] },
          "arguments": {
            "type": "object",
            "description": "The arguments.",
            "additionalProperties": { "$ref": "#/components/schemas/ToolArgumentDto" }
          }
        },
        "required": ["name", "description", "arguments"]
      },
      "ToolsDto": {
        "type": "object",
        "properties": {
          "items": { "description": "The available tools.", "type": "array", "items": { "$ref": "#/components/schemas/ToolDto" } }
        },
        "required": ["items"]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The ID of the user." },
          "email": { "type": "string", "description": "The email address." },
          "name": { "type": "string", "description": "The display name." }
        },
        "required": ["id", "email", "name"]
      },
      "ExecuteRequestDto": {
        "type": "object",
        "properties": {
          "tool": { "type": "string", "description": "The name of the tool." },
          "values": { "type": "object", "description": "The arguments.", "additionalProperties": true },
          "input": { "type": "string", "description": "The UI input if defined." },
          "confirmed": { "type": "boolean", "description": "The UI confirm status if defined." },
          "context": { "type": "object", "description": "The context values." },
          "user": { "description": "The user.", "allOf": [{ "$ref": "#/components/schemas/UserDto" }] }
        },
        "required": ["tool", "values", "user"]
      },
      "ExecuteResponseDto": {
        "type": "object",
        "properties": {
          "result": { "type": "string", "description": "The result of the tool." },
          "debug": { "type": "string", "description": "The debug information." }
        },
        "required": ["result"]
      }
    }
  }
}
