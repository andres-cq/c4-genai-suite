/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UIRequirementDto
 */
export interface UIRequirementDto {
    /**
     * The type of UI requirement.
     * @type {string}
     * @memberof UIRequirementDto
     */
    type: UIRequirementDtoTypeEnum;
    /**
     * The label to show to the user.
     * @type {string}
     * @memberof UIRequirementDto
     */
    label: string;
    /**
     * The cache duration for input requests.
     * @type {number}
     * @memberof UIRequirementDto
     */
    cacheDuration: number;
}


/**
 * @export
 */
export const UIRequirementDtoTypeEnum = {
    Confirm: 'confirm',
    Input: 'input'
} as const;
export type UIRequirementDtoTypeEnum = typeof UIRequirementDtoTypeEnum[keyof typeof UIRequirementDtoTypeEnum];


/**
 * Check if a given object implements the UIRequirementDto interface.
 */
export function instanceOfUIRequirementDto(value: object): value is UIRequirementDto {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('cacheDuration' in value) || value['cacheDuration'] === undefined) return false;
    return true;
}

export function UIRequirementDtoFromJSON(json: any): UIRequirementDto {
    return UIRequirementDtoFromJSONTyped(json, false);
}

export function UIRequirementDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UIRequirementDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'label': json['label'],
        'cacheDuration': json['cacheDuration'],
    };
}

export function UIRequirementDtoToJSON(value?: UIRequirementDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'label': value['label'],
        'cacheDuration': value['cacheDuration'],
    };
}

