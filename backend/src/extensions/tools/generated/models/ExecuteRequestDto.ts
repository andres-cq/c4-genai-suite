/* tslint:disable */
/* eslint-disable */
/**
 * CCCC
 * CodeCentric Company Chat
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserDto } from './UserDto';
import {
    UserDtoFromJSON,
    UserDtoFromJSONTyped,
    UserDtoToJSON,
} from './UserDto';

/**
 * 
 * @export
 * @interface ExecuteRequestDto
 */
export interface ExecuteRequestDto {
    /**
     * The name of the tool.
     * @type {string}
     * @memberof ExecuteRequestDto
     */
    tool: string;
    /**
     * The arguments.
     * @type {{ [key: string]: any; }}
     * @memberof ExecuteRequestDto
     */
    values: { [key: string]: any; };
    /**
     * The UI input if defined.
     * @type {string}
     * @memberof ExecuteRequestDto
     */
    input?: string;
    /**
     * The UI confirm status if defined.
     * @type {boolean}
     * @memberof ExecuteRequestDto
     */
    confirmed?: boolean;
    /**
     * The context values.
     * @type {object}
     * @memberof ExecuteRequestDto
     */
    context?: object;
    /**
     * The user.
     * @type {UserDto}
     * @memberof ExecuteRequestDto
     */
    user: UserDto;
}

/**
 * Check if a given object implements the ExecuteRequestDto interface.
 */
export function instanceOfExecuteRequestDto(value: object): value is ExecuteRequestDto {
    if (!('tool' in value) || value['tool'] === undefined) return false;
    if (!('values' in value) || value['values'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function ExecuteRequestDtoFromJSON(json: any): ExecuteRequestDto {
    return ExecuteRequestDtoFromJSONTyped(json, false);
}

export function ExecuteRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecuteRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'tool': json['tool'],
        'values': json['values'],
        'input': json['input'] == null ? undefined : json['input'],
        'confirmed': json['confirmed'] == null ? undefined : json['confirmed'],
        'context': json['context'] == null ? undefined : json['context'],
        'user': UserDtoFromJSON(json['user']),
    };
}

export function ExecuteRequestDtoToJSON(value?: ExecuteRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'tool': value['tool'],
        'values': value['values'],
        'input': value['input'],
        'confirmed': value['confirmed'],
        'context': value['context'],
        'user': UserDtoToJSON(value['user']),
    };
}

